import sqlalchemy as sa

from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Person(Base):
    __tablename__ = 'person'

    person_id = sa.Column(sa.Integer, primary_key=True)

    nickname = sa.Column(sa.String(64), nullable=False)
    password = sa.Column(sa.String(16))
    gender = sa.Column(sa.Integer)
    birthday = sa.Column(sa.Date)

class Telephone(Base):
    __tablename__ = 'telephone'

    tel_id = sa.Column(sa.Integer, primary_key =True)
    person_id = sa.Column(sa.Integer, sa.ForeignKey('person.person_id'))
    telphone_no = sa.Column(sa.String(64))

if __name__ == "__main__":

    engine = sa.create_engine("sqlite:///test.db")
    Base.metadata.create_all(engine)


下载alembic
pip3 install alembic

# 初始化环境
alembic init alembic

# 修改alembic.ini文件
sqlalchemy.url = mysql+pymysql://root:@localhost/linux_study

# 修改alembic/env.py文件, target_metadata状态
# import models 为导入的数据库文件
import os.path
import sys
sys.path.append(os.path.realpath('.'))
import models
target_metadata = models.Base.metadata

# 添加数据,  
rlname = sa.Column(sa.String(64))
idcard = sa.Column(sa.String(20))

# alembic revision -m "注释" 创建数据库版本
alembic revision --autogenerate -m 'added two columns to person table'

# 更新数据库
alembic upgrade 版本号

# 更新到最新版本
alembic upgrade head

# 更新到最初版本
alembic downgrade head

# 从特定起始版本生成sql
alembic upgrade 版本一:版本二 --sql > migration.sql

